# -*- coding: utf-8 -*-
"""Untitled0.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1cpMdM9zoLXZ7SV-YLHVEn9Knh8Q1bePd
"""

!pip install Unidecode

!pip install flashgeotext

import unidecode
import flashgeotext.geotext as flashgt
import re
import nltk
from nltk.corpus import stopwords
from nltk.stem import PorterStemmer
from nltk.stem import WordNetLemmatizer
from nltk.util import ngrams

text = 'România, Bogotá, Lüneburg, Résumé, The exact procedure for downloading the.correct.driver for Your Device depends on the version of operating system you are using. The flow cytometrist lives in New York City.'

stg1 = unidecode.unidecode(text)
stg1

stg2 = stg1.lower()
stg2

stg3 = re.findall(r'\w+', stg2)
stg3

stop_words = set(stopwords.words('english'))

stg4 = [w for w in stg3 if not w in stop_words]
stg4

stemmer = PorterStemmer()

stg5stem = [stemmer.stem(word) for word in stg4]
stg5stem

lemmatizer = WordNetLemmatizer()

stg5lemm = [lemmatizer.lemmatize(word) for word in stg4]
stg5lemm

list(nltk.bigrams(stg5stem))

[f'{fst} {snd} {trd}' for (fst,snd,trd) in nltk.trigrams(stg5stem)]

nltk.download('stopwords')

nltk.download('wordnet')

nltk.download('omw-1.4')

fgt = flashgt.GeoText()

def sanitize(raw_location, what_type):
    sanitized_location = unidecode.unidecode(raw_location.replace('.','').replace(',','').replace('-',' '))
    if what_type == 'country':
        sanitized_location = sanitized_location.replace('Usa','USA')
    return sanitized_location

def get_flashgeotext_locations_as_set(input_text):
    locations = []
    extract = fgt.extract(input_text=input_text)
    countries = []
    for d in extract['countries'].values():
        sanitized_location = sanitize(d['found_as'][0], 'country')
        countries.append(sanitized_location)
    locations.extend(countries)
    cities = []
    for d in extract['cities'].values():
        sanitized_location = sanitize(d['found_as'][0], 'city')
        cities.append(sanitized_location)
    locations.extend(cities)
    locations_as_set = set(locations)
    return sorted(list(locations_as_set))

text

get_flashgeotext_locations_as_set(text)

textexample = 'Chagrin Falls, OH is in Ohio. Paris is a city in France. San Francisco, California is in the U.S.'

get_flashgeotext_locations_as_set(textexample)

